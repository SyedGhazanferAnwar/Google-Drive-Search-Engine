Page |1

Information Processing Techniques
Lab 2
Introduction to
Windows Form Application

Instructor
Murtaza Munawar Fazal

4/7/2020

IPT Spring 2020 – FAST NU

Murtaza Munawar Fazal

Page |2

Introduction
In the last lab we have seen how to work with C# to create console based applications. But in a reallife scenario developer normally use Visual Studio and C# to create either Windows Forms or Webbased applications.
A windows form application is an application, which is designed to run on a computer, before jump
into windows form app development let’s have a brief overview of a framework which enable us to
develop windows form application that is .Net framework.
.NET framework is designed and developed by Microsoft. The first version of .Net framework was
released in the year 2002 named as .Net 1.0. It is used to develop Form-based application, web-based
application, and Web services. There is a variety of programming languages available on the .Net
platform, VB.Net and C# are the most commonly used. It is used to build applications for Windows,
phone, web etc. It provides a lot of functionalities and also supports industry standards.
Release History of .NET Framework and its compatibility with the different Windows version
.NET VERSION

1.0
1.1
2.0
3.0
3.5
4.0
4.5
4.5.1
4.5.2
4.6
4.6.1
4.6.2
4.7
4.7.1
4.7.2

CLR VERSION

DEVELOPMENT TOOL

WINDOWS SUPPORT

1.0
1.1
2.0
2.0
2.0
4
4
4
4
4
4
4
4
4
4

Visual Studio .NET
Visual Studio .NET 2003
Visual Studio 2005
Expression Blend
Visual Studio 2008
Visual Studio 2010
Visual Studio 2012
Visual Studio 2013
N/A
Visual Studio 2015
Visual Studio 2015 Update 1
N/A
Visual Studio 2017
Visual Studio 2017
Visual Studio 2017

XP SP1
XP SP2, SP3
N/A
Vista
7, 8, 8.1, 10
N/A
8
8.1
N/A
10 v1507
10 v1511
10 v1607
10 v1703
10 v1709
10v 1803

IPT Spring 2020 – FAST NU

Murtaza Munawar Fazal

Page |3

Windows forms application
A Windows forms application is one that runs on the desktop or laptop computer. A Windows
forms application will normally have a collection of controls such as labels, textboxes, buttons,
menus, list boxes, etc.
Below is an example of a simple Windows form application. It shows a simple screen, which is
accessible by the user. The user will enter the name and get a welcome message.

Creating windows application project on VS
Open visual studio and follow the steps to create new project.

IPT Spring 2020 – FAST NU

Murtaza Munawar Fazal

Page |4

Once you create new project visual studio automatically created program.cs which will be the main
for the project and Form1.cs which is a default form automatically created my project.

All the controls you need while working on windows application are available in toolbox ,
toolbox is usually available on left site of the screen.

IPT Spring 2020 – FAST NU

Murtaza Munawar Fazal

Page |5

Each control has properties, property related to a control is listed on property pan available on
the right site of the screen, and you can also find property by selecting a control and press F4
button. There are much properties of a single control but the most useful are Name and Text.

IPT Spring 2020 – FAST NU

Murtaza Munawar Fazal

Page |6

Name is used to call control from a code file while text is used to display text on UI
screen.

IPT Spring 2020 – FAST NU

Murtaza Munawar Fazal

Page |7

Greeting Program
On an empty form drag controls from toolbox to create UI given below

Form title: Form title can be changed using text property of form.
Label text: Label text can be changed using text property of label.
Button Value: Button value can be changed using text property of button.

Double click on button to go to code file, double click on control automatically create click event of
the button.

Now write a code in click event to show welcome message on same text box and a message box.

IPT Spring 2020 – FAST NU

Murtaza Munawar Fazal

Page |8

Practice Questions
• All questions should be Windows form application using C# (on Visual Studio)
• Solutions of each questions would be uploaded on slate by 4:00 PM
• Submitted code should have all of the files and can be compiled.
1- Create a simple Calculator that takes numeric values as input and perform addition, subtraction,
multiplication and division. UI design can be changed, you can create UI as good as you want.
Simplest UI can be

Hint:
a) Use this to check if value is numeric
System.Text.RegularExpressions.Regex.IsMatch(textBox1.Text, "[^0-9]")

b) Number divided by zero is infinity.
2- Generate an array of 1 million random numbers and perform ‘searching’ on that array. Measure
time difference on the following techniques:
a) Search the Array on one thread (no threading code required)
b) Search Array using 5 different threads
You should print the time taken when no thread was used and when 5 different threads are used.
Display the indices on which the data was found.
Note: You can use the following code to start a parameterized thread.
ParameterizedThreadStart param1 = new ParameterizedThreadStart(MethodToCall);
Thread th1 = new Thread(param1);
th1.Start(new ClassObject(StartingIndex, EndingIndex));

3- Using the multi-threaded code of Question 2, modify the code such that the Search function is
accessed by one thread at a time and compare timing with results of Question 2.
4- Using C# Reflection, display all the method names with their signature that are available in the
EntityFramework.dll (File has been uploaded on Slate\IPT\Lab Activity\EntityFramework.dll)

IPT Spring 2020 – FAST NU

Murtaza Munawar Fazal

